<?php
if (!defined('BASEPATH'))
    exit('No direct script access allowed');

class ts100 extends CI_Controller
{
    private $controller;
    private $view;
    private $view_form;

    function __construct()
    {
        parent::__construct();
        if (!is_login()) {
            echo "<script>window.location.replace('" . base_url() . "');</script>";
            exit;
        }
        
        $module = 'im';
        $this->load->library('module_auth', array(
            'module' => $module
        ));
        
        $this->load->model(array(
            'apps_model', 'ts100_model'
        ));
        
        $this->controller = $this->router->fetch_class();
        $this->view      = 'v'.$this->controller;
        $this->view_form = 'v'.$this->controller.'_form';
    }
    
    public function index() 
    {
        if (!$this->module_auth->read) {
            $this->session->set_flashdata('msg_warning', $this->module_auth->msg_read);
            redirect();
        }
        
        $data['current'] = 'im';
        $data['apps']    = $this->apps_model->get_active_only();
		
        $this->load->view($this->view, $data);
    }
    
    function grid()
    {		
		$i=0;
        $responce = new stdClass;
		if($query = $this->ts100_model->grid()) {
			foreach($query as $row) {
				$responce->aaData[$i][]=$row->agent_id;
				$responce->aaData[$i][]=$row->op_id;
				$responce->aaData[$i][]=$row->op_nama;
				$responce->aaData[$i][]=$row->wp_nama;
				$responce->aaData[$i][]=$row->wp_npwp;
				$responce->aaData[$i][]=$row->latitude;
				$responce->aaData[$i][]=$row->longitude;
				$i++;
			}
		} else {
			$responce->sEcho=1;
			$responce->iTotalRecords="0";
			$responce->iTotalDisplayRecords="0";
			$responce->aaData=array();
		}
		echo json_encode($responce);
    }
    
    private function fvalidation()
    {
        $this->form_validation->set_rules('agent_id','Agent ID','required|trim');
        $this->form_validation->set_rules('op_id','Objek Pajak','required|numeric');
    }
    
    private function fpost()
    {
        $data['agent_id'] = $this->input->post('agent_id');
        $data['op_id'] = $this->input->post('op_id');
        $data['latitude'] = $this->input->post('latitude');
        $data['longitude'] = $this->input->post('longitude');
        
        $data['op_nama'] = $this->input->post('op_nama');
        $data['wp_nama'] = $this->input->post('wp_nama');
        $data['npwp']    = $this->input->post('npwp');
		
        return $data;
    }
    
    public function add()
    {
        if (!$this->module_auth->create) {
            $this->session->set_flashdata('msg_warning', $this->module_auth->msg_create);
            redirect(active_module_url($this->controller));
        }
        
        $post_data  = $this->fpost();
        
        $data['current'] = 'im';
        $data['apps']    = $this->apps_model->get_active_only();
        $data['faction'] = active_module_url($this->controller.'/add');
        
        $this->fvalidation();
        if ($this->form_validation->run() == TRUE) {
            $input_post = $post_data;
            $update_data = array(
                'agent_id' => empty($input_post['agent_id']) ? NULL : $input_post['agent_id'],
                'op_id' => empty($input_post['op_id']) ? NULL : $input_post['op_id'],
                'latitude' => empty($input_post['latitude']) ? NULL : $input_post['latitude'],
                'longitude' => empty($input_post['longitude']) ? NULL : $input_post['longitude'],
            );
            $this->ts100_model->save($update_data);
            
            $this->session->set_flashdata('msg_success', 'Data telah disimpan');
            redirect(active_module_url($this->controller));
        }
        
        $data['dt']      = $post_data;
        $this->load->view($this->view_form, $data);
    }
    
    public function edit()
    {
        if (!$this->module_auth->update) {
            $this->session->set_flashdata('msg_warning', $this->module_auth->msg_update);
            redirect(active_module_url($this->controller));
        }
        
        $a_id  = $this->uri->segment(4);
        $op_id = $this->uri->segment(5);
        
        $data['current'] = 'im';
        $data['apps']    = $this->apps_model->get_active_only();
        $data['faction'] = active_module_url($this->controller."/update/{$a_id}/{$op_id}");
        
        if ($get = $this->ts100_model->get(array('agent_id'=>$a_id, 'op_id'=>$op_id))) {
            $data['dt']['agent_id'] = empty($get->agent_id) ? NULL : $get->agent_id;
            $data['dt']['op_id'] = empty($get->op_id) ? NULL : $get->op_id;
            $data['dt']['latitude'] = empty($get->latitude) ? NULL : $get->latitude;
            $data['dt']['longitude'] = empty($get->longitude) ? NULL : $get->longitude;
			
            //--
            $this->load->model('op_model');
            $op_data = $this->op_model->get($get->op_id);
            $data['dt']['op_nama'] = empty($op_data->nama) ? NULL : $op_data->nama;
            
            $wp_data = $this->op_model->get_wp($get->op_id);
            $data['dt']['wp_nama'] = empty($wp_data->nama) ? NULL : $wp_data->nama;
            $data['dt']['npwp'] = empty($wp_data->npwp) ? NULL : $wp_data->npwp;
            
			$this->load->view($this->view_form, $data);
        } else {
            show_404();
        }
    }
    
    public function update()
    {
        if (!$this->module_auth->update) {
            $this->session->set_flashdata('msg_warning', $this->module_auth->msg_update);
            redirect(active_module_url($this->controller));
        }
        
        $a_id      = $this->uri->segment(4);
        $op_id     = $this->uri->segment(5);
        $post_data = $this->fpost();
        
        $data['current'] = 'im';
        $data['apps']    = $this->apps_model->get_active_only();
        $data['faction'] = active_module_url($this->controller."/update/{$a_id}/{$op_id}");
        
        $this->fvalidation();
        if ($this->form_validation->run() == TRUE) {
            $input_post  = $post_data;
            $update_data = array(
                'agent_id' => empty($input_post['agent_id']) ? NULL : $input_post['agent_id'],
                'op_id' => empty($input_post['op_id']) ? NULL : $input_post['op_id'],
                'latitude' => empty($input_post['latitude']) ? NULL : $input_post['latitude'],
                'longitude' => empty($input_post['longitude']) ? NULL : $input_post['longitude'],

            );
            
            $this->ts100_model->update(array('agent_id'=>$a_id, 'op_id'=>$op_id), $update_data);
            
            $this->session->set_flashdata('msg_success', 'Data telah disimpan');
            redirect(active_module_url($this->controller));
        }
        
        $data['dt'] = $post_data;		
		$this->load->view($this->view_form, $data);
    }
    
    public function delete()
    {
        if (!$this->module_auth->delete) {
            $this->session->set_flashdata('msg_warning', $this->module_auth->msg_delete);
            redirect(active_module_url($this->controller));
        }
        
        $a_id  = $this->uri->segment(4);
        $op_id = $this->uri->segment(5);
        
        if ($id && $this->ts100_model->get(array('agent_id'=>$a_id, 'op_id'=>$op_id))) {
            $this->ts100_model->delete(array('agent_id'=>$a_id, 'op_id'=>$op_id));
            $this->session->set_flashdata('msg_success', 'Data telah dihapus');
            redirect(active_module_url($this->controller));
        } else {
            show_404();
        }
    }
    
    // ----
    
    public function grid_agent() {
		$i=0;
        $responce = new stdClass;
        $this->load->model('agent_model');
		if($query = $this->agent_model->get_all()) {
			foreach($query as $row) {
				$responce->aaData[$i][]=$row->id;
				$responce->aaData[$i][]=$row->jalur;
				$responce->aaData[$i][]=$row->status;
				$responce->aaData[$i][]=$row->job;
				$responce->aaData[$i][]=$row->lastjob;
				$responce->aaData[$i][]=$row->startup;
				$responce->aaData[$i][]=$row->ket;
				$i++;
			}
		} else {
			$responce->sEcho=1;
			$responce->iTotalRecords="0";
			$responce->iTotalDisplayRecords="0";
			$responce->aaData=array();
		}
		echo json_encode($responce);
    }
    
    public function grid_op() {
		$i=0;
        $responce = new stdClass;
        $this->load->model('op_model');
		if($query = $this->op_model->grid_dlg_ts100()) {
			foreach($query as $row) {
				$responce->aaData[$i][]=$row->id;
				$responce->aaData[$i][]=$row->nama;
				$responce->aaData[$i][]=$row->wp_nama;
				$responce->aaData[$i][]=$row->npwp;
				$responce->aaData[$i][]=$row->kelurahan;
				$responce->aaData[$i][]=$row->kecamatan;
				$i++;
			}
		} else {
			$responce->sEcho=1;
			$responce->iTotalRecords="0";
			$responce->iTotalDisplayRecords="0";
			$responce->aaData=array();
		}
		echo json_encode($responce);
    }
}